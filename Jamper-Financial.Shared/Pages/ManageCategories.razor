@page "/manage-categories"
@using Jamper_Financial.Shared.Data
@using Jamper_Financial.Shared.Models


<h3>Manage Categories</h3>

<div class="category-container">
    <input class="category-input" @bind="NewCategoryName" placeholder="Enter category name..." />
    <button class="category-add-btn" @onclick="AddCategory">Add</button>
</div>

<ul class="category-list">
    @foreach (var category in Categories)
    {
        <li class="category-item">
            <span>@category.Name</span>
            <div>
                <button class="edit-btn" @onclick="() => EditCategory(category.CategoryID)">Edit</button>
                <button class="delete-btn" @onclick="() => DeleteCategory(category.CategoryID)">Delete</button>
            </div>
        </li>
    }
</ul>

@if (EditingCategoryID > 0)
{
    <div class="edit-container">
        <input class="category-input" @bind="EditingCategoryName" placeholder="Edit category name..." />
        <button class="save-btn" @onclick="SaveEditedCategory">Save</button>
        <button class="cancel-btn" @onclick="CancelEdit">Cancel</button>
    </div>
}

@code {
    private List<Category> Categories = new();
    private string NewCategoryName = "";
    private int EditingCategoryID = 0;
    private string EditingCategoryName = "";

    //user retrieval
    private int UserID = 1; 

    protected override void OnInitialized()
    {
        LoadCategories();
    }

    private void LoadCategories()
    {
        var categoryData = DatabaseHelper.GetCategories(UserID);
        Categories = categoryData.Select(c => new Category { CategoryID = c.CategoryID, Name = c.Name }).ToList();
    }

    private void AddCategory()
    {
        if (!string.IsNullOrWhiteSpace(NewCategoryName))
        {
            DatabaseHelper.AddCategory(UserID, NewCategoryName);
            NewCategoryName = "";
            LoadCategories();
        }
    }

    private void EditCategory(int categoryID)
    {
        var category = Categories.FirstOrDefault(c => c.CategoryID == categoryID);
        if (category != null)
        {
            EditingCategoryID = category.CategoryID;
            EditingCategoryName = category.Name;
        }
    }

    private void SaveEditedCategory()
    {
        if (EditingCategoryID > 0 && !string.IsNullOrWhiteSpace(EditingCategoryName))
        {
            DatabaseHelper.UpdateCategory(UserID, EditingCategoryID, EditingCategoryName);
            EditingCategoryID = 0;
            EditingCategoryName = "";
            LoadCategories();
        }
    }

    private void DeleteCategory(int categoryID)
    {
        DatabaseHelper.DeleteCategory(UserID, categoryID);
        LoadCategories();
    }

    private void CancelEdit()
    {
        EditingCategoryID = 0;
        EditingCategoryName = "";
    }
}
