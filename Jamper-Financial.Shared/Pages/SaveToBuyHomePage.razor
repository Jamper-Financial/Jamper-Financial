@page "/save-to-buy-home"
@using Jamper_Financial.Shared.Services
@using Jamper_Financial.Shared.Data
@inject NavigationManager Navigation
@inject GoalState GoalState
@inject DatabaseHelperFactory DatabaseHelper

<div class="header-container">
    <h3 class="header">Save to Buy a Home</h3>
</div>
<div class="content-container">
    <div class="form-container">
        <div class="form-group">
            <label for="homePrice">Home Price</label>
            <input type="number" id="homePrice" step="0.01" @bind="homePrice" />
            @if (homePrice <= 0)
            {
                <span class="error">Home Price must be greater than zero!</span>
            }
        </div>
        <div class="form-group">
            <label for="currentSavings">Current Savings</label>
            <input type="number" id="currentSavings" step="0.01" @bind="currentSavings" />
        </div>
        <div class="form-group">
            <label for="monthlySavings">Monthly Savings</label>
            <input type="number" id="monthlySavings" step="0.01" @bind="monthlySavings" />
        </div>
        <div class="form-group">
            <label for="targetPurchaseDate">Target Purchase Date</label>
            <input type="date" id="targetPurchaseDate" @bind="targetPurchaseDate" min="@DateTime.Today.ToString("yyyy-MM-dd")" />
        </div>
        <button class="submit-button" @onclick="SubmitHomeGoal">Submit</button>
        <button class="back-button" @onclick="GoBack">Back</button>

    </div>
</div>

@code {
    private decimal homePrice;
    private decimal currentSavings;
    private decimal monthlySavings;
    private DateTime targetPurchaseDate = DateTime.Today;

    private void SubmitHomeGoal()
    {
        if (homePrice > 0)
        {
            var homeGoal = new Goal
                {
                    Name = "Save to Buy a Home",
                    StartDate = DateTime.Now,
                    EndDate = targetPurchaseDate,
                    Description = $"Home Price: {homePrice}, Current Savings: {currentSavings}, Monthly Savings: {monthlySavings}, ",
                                
                    Category = "Home",
                    GoalType = "Savings",
                    Frequency = "Monthly",
                    IsHomeGoal = true
                };

            GoalState.AddGoal(homeGoal);
            DatabaseHelper.InsertGoal(homeGoal);
            Navigation.NavigateTo("/view-goals-page");
        }
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/saving-goals-page");
    }
}

