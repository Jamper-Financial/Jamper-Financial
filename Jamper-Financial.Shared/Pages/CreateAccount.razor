@page "/create-account"
@using Jamper_Financial.Shared.Data

<div class="registration-container">
    <div class="registration-left">
        <h1>Welcome! Let's get started</h1>
        <div class="registration-form">
            <h2>Please enter your details below</h2>
            <form>
                <label for="first-name">First name <span class="required">*</span></label>
                <input id="first-name" type="text" placeholder="Enter your first name" @bind="FirstName" />

                <label for="last-name">Last name <span class="required">*</span></label>
                <input id="last-name" type="text" placeholder="Enter your last name" @bind="LastName" />

                <label for="username">Username <span class="required">*</span></label>
                <input id="username" type="text" placeholder="Enter your username" @bind="Username" />

                <label for="birthdate">Birth date (yyyy-mm-dd) <span class="required">*</span></label>
                <input id="birthdate" type="date" placeholder="YYYY-MM-DD" @bind="BirthDate" />

                <label for="email">Email <span class="required">*</span></label>
                <input id="email" type="email" placeholder="Enter your email" @bind="Email" />

                <label for="password">Password <span class="required">*</span></label>
                <input id="password" type="password" placeholder="Create your password" @bind="Password" />

                <label for="confirm-password">Confirm Password <span class="required">*</span></label>
                <input id="confirm-password" type="password" placeholder="Confirm your password"
                    @bind="ConfirmPassword" />

                <div class="bottom-buttons">
                    <button type="button" class="back-button" @onclick="NavigateToLoginPage">Back</button>
                    <button type="button" class="submit-button" @onclick="CreateUserAccount">Submit</button>
                </div>

                <p class="terms">
                    By pressing submit you agree with the
                    <a href="#">Terms of Use</a> and <a href="#">Privacy Policy</a>.
                </p>
            </form>
        </div>
    </div>
    <div class="registration-right">
        <img src="/images/logo.png" alt="Jamper Logo" />
    </div>
</div>


@* alert error message *@
@if (!string.IsNullOrWhiteSpace(ErrorMessage))
{
    <div class="alert alert-danger" role="alert">
        @ErrorMessage
    </div>
}

@* if account is successfully created this alert will pop up *@
@if (AccountCreated)
{
    <div class="alert alert-success" role="alert">
        Account created successfully! Redirecting to login...
    </div>
}

@code {

    private string FirstName { get; set; } = string.Empty;
    private string LastName { get; set; } = string.Empty;
    private string Username { get; set; } = string.Empty;
    private DateTime BirthDate { get; set; } = DateTime.Now;
    private string Email { get; set; } = string.Empty;
    private string Password { get; set; } = string.Empty;
    private string ConfirmPassword { get; set; } = string.Empty;
    private string ErrorMessage { get; set; } = string.Empty;
    private bool AccountCreated { get; set; } = false;

    // Inject NavigationManager
    [Inject]
    private NavigationManager Navigation { get; set; }

    // Navigate to login page
    private void NavigateToLoginPage()
    {
        Navigation.NavigateTo("/login");
    }

    @* This handles users input during account creation *@
    private bool ValidateForm()
    {
        if (string.IsNullOrWhiteSpace(FirstName) || string.IsNullOrWhiteSpace(LastName) ||
        string.IsNullOrWhiteSpace(Username) || string.IsNullOrWhiteSpace(Email) ||
        string.IsNullOrWhiteSpace(Password) || string.IsNullOrWhiteSpace(ConfirmPassword))
        {
            ErrorMessage = "Please fill in all fields.";
            return false;
        }

        if (Password != ConfirmPassword)
        {
            ErrorMessage = "Passwords do not match.";
            return false;
        }

        if (DatabaseHelper.IsUsernameTaken(Username))
        {
            ErrorMessage = "Username is already taken. Please choose another.";
            return false;
        }

        if (DatabaseHelper.IsEmailTaken(Email))
        {
            ErrorMessage = "You already have an account with this email. Please log in.";
            return false;
        }

        ErrorMessage = string.Empty;
        return true;
    }

    // Create user account
    private void CreateUserAccount()
    {
        if (!ValidateForm())
        {
            Console.WriteLine($"Validation failed: {ErrorMessage}");
            return;
        }

        // Insert the user into the database
        DatabaseHelper.InsertUser(FirstName, LastName, Username, BirthDate.ToString("yyyy-MM-dd"), Email, Password);
        //For Debugging
        Console.WriteLine("Account created successfully!");

        // Show success message
        AccountCreated = true;

        // Redirect to login page after a short delay
        Task.Delay(2000).ContinueWith(_ => NavigateToLoginPage());
    }
}

<Style>
    body {
        font-family: 'Inter', sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f5f5f5;
    }

    .registration-container {
        display: flex;
        height: 90vh;
    }

    .registration-left {
        flex: 1;
        background-color: #f5f5f5;
        padding: 40px;
        display: flex;
        flex-direction: column;
        justify-content: center;
    }

    .registration-form {
        background-color: #D0E8C5;
        border: 1px solid #d4e8b6;
        border-radius: 10px;
        padding: 20px;
        box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
    }

    h1 {
        color: black;
        font-size: 24px;
        font-weight: bold;
        text-align: center;
    }

    h2 {
        color: #62ad41;
        font-size: 20px;
        margin-bottom: 20px;
        text-align: center;
    }

    label {
        color: #444;
        font-size: 14px;
        margin-bottom: 5px;
        display: block;
    }

    input {
        width: 100%;
        padding: 10px;
        margin-bottom: 15px;
        border: 1px solid #ddd;
        border-radius: 5px;
        font-size: 14px;
        background-color: #fff !important;
        z-index: 1000 !important;
        position: relative !important;
        pointer-events: auto !important;
    }

    .login-form {
        z-index: 10 !important;
        position: relative !important;
    }

    .bottom-buttons {
        display: flex;
        justify-content: space-between;
        margin-top: 20px;
    }

    button {
        border: none;
        border-radius: 5px;
        padding: 10px 20px;
        font-size: 16px;
        cursor: pointer;
    }

    .back-button {
        background-color: #f5f5f5;
        color: #62ad41;
        border: 1px solid #62ad41;
    }

        .back-button:hover {
            background-color: #62ad41;
            color: white;
        }

    .submit-button {
        background-color: #62ad41;
        color: white;
        border: none;
    }

        .submit-button:hover {
            background-color: #519a37;
        }

    .terms {
        color: #888;
        font-size: 12px;
        text-align: center;
        margin-top: 20px;
    }

    .registration-right {
        flex: 1;
        display: flex;
        justify-content: center;
        align-items: center;
    }

        .registration-right img {
            height: 50%;
            width: auto;
            max-width: 100%;
        }


    .alert {
        position: fixed;
        top: 90px;
        left: 28%;
        transform: translateX(-50%);
        z-index: 1000;
        width: 80%;
        max-width: 500px;
        padding: 15px;
        border-radius: 5px;
        font-size: 1rem;
        text-align: center;
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
    }

    .required {
        color: red;
        font-weight: bold;
        margin-left: 5px;
        font-size: 1rem;
    }

    .sidebar {
        display: none; /* This hides the sidebar */
    }

    .header-bar {
        display: none; /* Hide the header bar */
    }
</Style>